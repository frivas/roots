---
description: This rules helps keep the system localized to our compatible languages as it grows with new features, sections, and strings
globs: 
alwaysApply: false
---
# Localization Requirements

## üåç LOCALIZATION REQUIREMENTS (CRITICAL)
**Every new feature, component, page, or text addition MUST follow these localization rules:**

### 1. **TranslatedText Component Usage**
- ‚úÖ DO: Wrap ALL user-facing strings with `<TranslatedText>Your text here</TranslatedText>`
- ‚ùå DON'T: Use raw strings directly in JSX: `<span>Settings</span>`
- ‚úÖ EXAMPLE: `<TranslatedText element="h1" className="text-2xl">Dashboard</TranslatedText>`

### 2. **String Localization Checklist**
- [ ] All button text wrapped with TranslatedText
- [ ] All headings and labels wrapped with TranslatedText  
- [ ] All error messages wrapped with TranslatedText
- [ ] All placeholder text wrapped with TranslatedText
- [ ] All toast/notification messages wrapped with TranslatedText
- [ ] All modal/dialog content wrapped with TranslatedText

### 3. **Import Requirements**
- Always import: `import TranslatedText from '../components/TranslatedText';`
- Import hook when needed: `import { useLingoTranslation } from '../contexts/LingoTranslationContext';`

### 4. **Spanish Dictionary Updates**
- Add new common phrases to `frontend/src/services/SpanishTranslations.ts`
- Use the format: `"English text": "Spanish translation"`
- Test translations with the Translation Debugger component

### 5. **Dynamic Content Translation**
- For dynamic/computed strings, use the hook:
```typescript
const { translateText } = useLingoTranslation();
const translatedMessage = await translateText(`Hello ${userName}`);
```

### 6. **Form Validation & Placeholders**
- Wrap all form placeholders: `placeholder={<TranslatedText>Enter your name</TranslatedText>}`
- Wrap all validation messages with TranslatedText
- Include Spanish date/time formats for Spanish locale

## üîç PRE-COMMIT LOCALIZATION CHECKLIST
Before submitting any code, verify:
- [ ] No hardcoded English strings in JSX
- [ ] All user-facing text uses TranslatedText component
- [ ] Spanish translations added to SpanishTranslations.ts for common phrases
- [ ] Tested with language switcher (English ‚Üî Spanish)
- [ ] Regional formats work correctly (dates, phone numbers, timezones)

## üìù CODE PATTERNS TO FOLLOW

**‚úÖ GOOD - Properly Localized:**
```tsx
// Headings
<TranslatedText element="h1">Welcome to Dashboard</TranslatedText>

// Buttons
<Button>
  <TranslatedText>Save Changes</TranslatedText>
</Button>

// Form inputs
<Input placeholder="Enter email" /> // Will be wrapped internally
<label><TranslatedText>Email Address</TranslatedText></label>

// Dynamic content
const { translateText } = useLingoTranslation();
const message = await translateText(`Welcome back, ${user.name}!`);
```

**‚ùå BAD - Not Localized:**
```tsx
<h1>Welcome to Dashboard</h1>  // Missing TranslatedText
<Button>Save Changes</Button>   // Missing TranslatedText
<div>Settings</div>             // Missing TranslatedText
```

## üõ† DEVELOPMENT WORKFLOW
1. **Write feature in English first** (your preferred workflow)
2. **Wrap all strings with TranslatedText** during development
3. **Add common phrases to SpanishTranslations.ts** 
4. **Test with Translation Debugger** (available on Dashboard)
5. **Switch language and verify** all text translates properly

## üéØ TRANSLATION PRIORITIES
1. **Instant (Local Dictionary)**: Navigation, buttons, common UI elements
2. **Dynamic (Lingo.dev SDK)**: User-generated content, descriptions, messages
3. **Regional Adaptation**: Dates, times, phone formats for Spanish users

## üì± REGIONAL SETTINGS FOR SPANISH
- **Date Format**: DD/MM/YYYY
- **Time Zone**: UTC+1 (CET)
- **Phone Format**: +34 XXX XXX XXX
- **Currency**: ‚Ç¨ (if applicable)

## üö® CRITICAL REMINDERS
- **NEVER commit code with untranslated user-facing strings**
- **ALWAYS test language switching before push**
- **ALWAYS add new common terms to Spanish dictionary**
- **RESPECT the hybrid translation architecture** (Local ‚Üí Cache ‚Üí SDK ‚Üí Fallback)

## üöÄ Quick Commands
```bash
# Check for untranslated strings
npm run check-localization

# Run full pre-commit check
npm run pre-commit
```
